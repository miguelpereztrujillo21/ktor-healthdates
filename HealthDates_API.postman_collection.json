{
	"info": {
		"_postman_id": "8a1b2c3d-4e5f-6789-abcd-ef0123456789",
		"name": "HealthDates API",
		"description": "API para sistema de citas médicas con autenticación JWT",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register Patient",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"paciente@email.com\",\n    \"password\": \"password123\",\n    \"firstName\": \"Juan\",\n    \"lastName\": \"Pérez\",\n    \"birthDate\": \"1985-03-15\",\n    \"gender\": \"M\",\n    \"address\": \"Calle Mayor 123, Madrid\",\n    \"phone\": \"+34 666 123 456\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/register-patient",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"register-patient"
							]
						},
						"description": "Registra un nuevo paciente en el sistema"
					}
				},
				{
					"name": "Login Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('jwt_token', response.token);",
									"    console.log('Token guardado:', response.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"paciente@email.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/login-patient",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"login-patient"
							]
						},
						"description": "Inicia sesión y obtiene el token JWT"
					}
				},
				{
					"name": "Login Existing Patient 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('jwt_token', response.token);",
									"    console.log('Token guardado:', response.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"paciente1@email.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/login-patient",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"login-patient"
							]
						},
						"description": "Login con paciente de prueba 1 (del script SQL)"
					}
				}
			],
			"description": "Endpoints para autenticación de usuarios"
		},
		{
			"name": "Appointments",
			"item": [
				{
					"name": "Get Patient Appointments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/patient-appointments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"patient-appointments"
							]
						},
						"description": "Obtiene todas las citas del paciente autenticado"
					}
				},
				{
					"name": "Get Upcoming Appointments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/patient-appointments?onlyUpcoming=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"patient-appointments"
							],
							"query": [
								{
									"key": "onlyUpcoming",
									"value": "true"
								}
							]
						},
						"description": "Obtiene solo las próximas citas del paciente"
					}
				},
				{
					"name": "Book Appointment - Cardiología",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"doctorId\": \"{{doctor_cardiology_id}}\",\n    \"serviceId\": 1,\n    \"procedureId\": 1,\n    \"appointmentDatetime\": \"2025-07-25T10:30:00\",\n    \"durationMinutes\": 30,\n    \"reason\": \"Electrocardiograma de rutina\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/book-appointment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"book-appointment"
							]
						},
						"description": "Reserva una cita de cardiología"
					}
				},
				{
					"name": "Book Appointment - Dermatología",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"doctorId\": \"{{doctor_dermatology_id}}\",\n    \"serviceId\": 2,\n    \"procedureId\": 5,\n    \"appointmentDatetime\": \"2025-07-28T14:00:00\",\n    \"durationMinutes\": 45,\n    \"reason\": \"Revisión de lunares\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/book-appointment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"book-appointment"
							]
						},
						"description": "Reserva una cita de dermatología"
					}
				},
				{
					"name": "Book Appointment - Pediatría",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"doctorId\": \"{{doctor_pediatry_id}}\",\n    \"serviceId\": 4,\n    \"procedureId\": 15,\n    \"appointmentDatetime\": \"2025-07-30T09:00:00\",\n    \"durationMinutes\": 30,\n    \"reason\": \"Consulta pediátrica de rutina\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/book-appointment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"book-appointment"
							]
						},
						"description": "Reserva una cita de pediatría"
					}
				}
			],
			"description": "Endpoints para gestión de citas médicas"
		},
		{
			"name": "Database Queries",
			"item": [
				{
					"name": "Get Doctor IDs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/doctors",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"doctors"
							]
						},
						"description": "Endpoint de utilidad para obtener IDs de doctores (si existe)"
					}
				}
			],
			"description": "Consultas auxiliares para obtener datos de referencia"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "doctor_cardiology_id",
			"value": "",
			"type": "string",
			"description": "ID del doctor de cardiología (obtener de la base de datos)"
		},
		{
			"key": "doctor_dermatology_id",
			"value": "",
			"type": "string",
			"description": "ID del doctor de dermatología (obtener de la base de datos)"
		},
		{
			"key": "doctor_pediatry_id",
			"value": "",
			"type": "string",
			"description": "ID del doctor de pediatría (obtener de la base de datos)"
		}
	]
}

